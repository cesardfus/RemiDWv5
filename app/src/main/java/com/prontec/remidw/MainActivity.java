package com.prontec.remidw;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.ActivityInfo;import android.graphics.Color;import android.graphics.Typeface;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.util.Log;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.ListView;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.core.content.res.ResourcesCompat;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import com.prontec.remidw.entidades.Granja;import com.prontec.remidw.interfaces.GetBoolean;import com.prontec.remidw.interfaces.GetString;import com.prontec.remidw.secundarios.shure;import com.prontec.remidw.support.Funciones;import java.time.LocalDate;import java.util.ArrayList;import java.util.List;public class MainActivity extends AppCompatActivity {    private Button btningreso, btnsalir;    private Spinner spultgranja;    private EditText edttelefono;    private List<String> values;    public String usuario, nombreGranja, telefono;    private Toolbar toolbarmain;    private ListView lvgranjas;    private Funciones funciones;    private Typeface tfavv;    private CheckBox ingalways;    private DatabaseReference mDatabase, myRef;    private Granja granja;    private SharedPreferences preferences;    private static final String PREFS_NAME = "PrefsFile";    private Boolean autologgranja = false, isautogranja = false;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);        mDatabase = FirebaseDatabase.getInstance().getReference();        mDatabase.keepSynced(true);        Inicio();        SetearListeners();        setearpreferencias();        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, values) {            @Override            public View getView(int position, View convertView, android.view.ViewGroup parent) {                tfavv = ResourcesCompat.getFont(getContext(), R.font.gothica1black);                TextView v = (TextView) super.getView(position, convertView, parent);                String ghelp = v.getText().toString();                v.setText(ghelp.toUpperCase());                v.setTypeface(tfavv);                return v;            }            public View getDropDownView(int position, View convertView, android.view.ViewGroup parent) {                View view = super.getDropDownView(position, convertView, parent);                TextView v = (TextView) super.getView(position, convertView, parent);                tfavv = ResourcesCompat.getFont(getContext(), R.font.gothica1black);                v.setTypeface(tfavv);                v.setTextColor(Color.BLACK);                return v;            }        };        lvgranjas.setAdapter(adapter);        lvgranjas.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                Object itemclick = lvgranjas.getItemAtPosition(position);                myRef = mDatabase.child("granjas").orderByChild("nombre").equalTo(itemclick.toString()).getRef();                //Query phoneQuery = myRef.orderByChild();                myRef.addListenerForSingleValueEvent(new ValueEventListener() {                    @Override                    public void onDataChange(DataSnapshot dataSnapshot) {                        for(DataSnapshot singleSnapshot : dataSnapshot.getChildren()){                            edttelefono.setText(singleSnapshot.getKey());                        }                    }                    @Override                    public void onCancelled(@NonNull DatabaseError databaseError) {                        Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                    }                });            }        });    }    private void SetearListeners() {        btningreso.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                IngresarDatos();            }        });    }    private void IngresarDatos() {        SharedPreferences.Editor editor = preferences.edit();        preferences = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);        if(preferences.contains("pref_telefono")){            telefono = preferences.getString("pref_telefono", "");            if(telefono.equals("") || telefono.equals(null)){                Toast.makeText(getApplicationContext(), "Llenar el campo telefono", Toast.LENGTH_SHORT).show();            } else {                if(ingalways.isChecked()){                    editor.putBoolean("pref_autogranja", true);                    editor.putString("pref_telefono", telefono);                    editor.apply();                } else {                    editor.putBoolean("pref_autogranja", false);                    editor.apply();                }                myRef = mDatabase.child("granjas").orderByChild("telefono").equalTo(telefono).getRef();                myRef.addListenerForSingleValueEvent(new ValueEventListener() {                    @Override                    public void onDataChange(DataSnapshot dataSnapshot) {                        if (dataSnapshot.exists()){                            myRef = mDatabase.child("granjasuser/"+usuario).orderByChild("telefono").equalTo(telefono).getRef();                            //Query phoneQuery = myRef.orderByChild();                            myRef.addListenerForSingleValueEvent(new ValueEventListener() {                                @Override                                public void onDataChange(DataSnapshot dataSnapshot) {                                    if (dataSnapshot.exists()){                                        Log.d("EXISTEGU", "Existe granja User");                                        myRef = mDatabase.child("granjas").orderByChild("telefono").equalTo(telefono).getRef();                                        //Query phoneQuery = myRef.orderByChild();                                        myRef.addListenerForSingleValueEvent(new ValueEventListener() {                                            @Override                                            public void onDataChange(DataSnapshot dataSnapshot) {                                                for(DataSnapshot singleSnapshot : dataSnapshot.getChildren()){                                                    granja = singleSnapshot.getValue(Granja.class);                                                    Intent pop = new Intent(getApplicationContext(), DatosActivity.class);                                                    pop.putExtra("telefono", telefono);                                                    pop.putExtra("nombre", granja.getNombre());                                                    pop.putExtra("usuario", usuario);                                                    startActivity(pop);                                                    overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);                                                }                                            }                                            @Override                                            public void onCancelled(@NonNull DatabaseError databaseError) {                                                Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                                            }                                        });                                    } else {                                        Log.d("EXISTEGU", "NO Existe granja User");                                        myRef = mDatabase.child("granjas").orderByChild("telefono").equalTo(telefono).getRef();                                        //Query phoneQuery = myRef.orderByChild();                                        myRef.addListenerForSingleValueEvent(new ValueEventListener() {                                            @Override                                            public void onDataChange(DataSnapshot dataSnapshot) {                                                for(DataSnapshot singleSnapshot : dataSnapshot.getChildren()){                                                    granja = singleSnapshot.getValue(Granja.class);                                                    funciones.granjaUser(usuario, granja.getNombre(), telefono);                                                    Intent pop = new Intent(getApplicationContext(), DatosActivity.class);                                                    pop.putExtra("telefono", telefono);                                                    pop.putExtra("nombre", granja.getNombre());                                                    pop.putExtra("usuario", usuario);                                                    startActivity(pop);                                                    overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);                                                }                                            }                                            @Override                                            public void onCancelled(@NonNull DatabaseError databaseError) {                                                Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                                            }                                        });                                    }                                }                                @Override                                public void onCancelled(@NonNull DatabaseError databaseError) {                                    Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                                }                            });                        }else{                            Intent pop = new Intent(getApplicationContext(), shure.class);                            pop.putExtra("telefono", telefono);                            startActivity(pop);                        }                    }                    @Override                    public void onCancelled(@NonNull DatabaseError databaseError) {                        Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                    }                });            }        } else {            telefono = edttelefono.getText().toString();            if(ingalways.isChecked()){                editor.putBoolean("pref_autogranja", true);                editor.putString("pref_telefono", telefono);                editor.apply();            } else {                editor.putBoolean("pref_autogranja", false);                editor.apply();            }            myRef = mDatabase.child("granjas").orderByChild("telefono").equalTo(telefono).getRef();            myRef.addListenerForSingleValueEvent(new ValueEventListener() {                @Override                public void onDataChange(DataSnapshot dataSnapshot) {                    if (dataSnapshot.exists()){                        myRef = mDatabase.child("granjasuser/"+usuario).orderByChild("telefono").equalTo(telefono).getRef();                        //Query phoneQuery = myRef.orderByChild();                        myRef.addListenerForSingleValueEvent(new ValueEventListener() {                            @Override                            public void onDataChange(DataSnapshot dataSnapshot) {                                if (dataSnapshot.exists()){                                    Log.d("EXISTEGU", "Existe granja User");                                    myRef = mDatabase.child("granjas").orderByChild("telefono").equalTo(telefono).getRef();                                    //Query phoneQuery = myRef.orderByChild();                                    myRef.addListenerForSingleValueEvent(new ValueEventListener() {                                        @Override                                        public void onDataChange(DataSnapshot dataSnapshot) {                                            for(DataSnapshot singleSnapshot : dataSnapshot.getChildren()){                                                granja = singleSnapshot.getValue(Granja.class);                                                Intent pop = new Intent(getApplicationContext(), DatosActivity.class);                                                pop.putExtra("telefono", telefono);                                                pop.putExtra("nombre", granja.getNombre());                                                pop.putExtra("usuario", usuario);                                                startActivity(pop);                                                overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);                                            }                                        }                                        @Override                                        public void onCancelled(@NonNull DatabaseError databaseError) {                                            Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                                        }                                    });                                } else {                                    Log.d("EXISTEGU", "NO Existe granja User");                                    myRef = mDatabase.child("granjas").orderByChild("telefono").equalTo(telefono).getRef();                                    //Query phoneQuery = myRef.orderByChild();                                    myRef.addListenerForSingleValueEvent(new ValueEventListener() {                                        @Override                                        public void onDataChange(DataSnapshot dataSnapshot) {                                            for(DataSnapshot singleSnapshot : dataSnapshot.getChildren()){                                                granja = singleSnapshot.getValue(Granja.class);                                                funciones.granjaUser(usuario, granja.getNombre(), telefono);                                                Intent pop = new Intent(getApplicationContext(), DatosActivity.class);                                                pop.putExtra("telefono", telefono);                                                pop.putExtra("nombre", granja.getNombre());                                                pop.putExtra("usuario", usuario);                                                startActivity(pop);                                                overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);                                            }                                        }                                        @Override                                        public void onCancelled(@NonNull DatabaseError databaseError) {                                            Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                                        }                                    });                                }                            }                            @Override                            public void onCancelled(@NonNull DatabaseError databaseError) {                                Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                            }                        });                    }else{                        Intent pop = new Intent(getApplicationContext(), shure.class);                        pop.putExtra("telefono", telefono);                        startActivity(pop);                    }                }                @Override                public void onCancelled(@NonNull DatabaseError databaseError) {                    Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());                }            });        }    }    private void Inicio(){        values = new ArrayList<String>();        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();        if (user != null) {            // Name, email address, and profile photo Url            String email = user.getEmail();            String[] parts = email.split("@");            usuario = parts[0]; // 123        }        funciones = new Funciones();        toolbarmain = findViewById(R.id.toolbarmain);        setSupportActionBar(toolbarmain);        toolbarmain.setTitleTextColor(getResources().getColor(R.color.blackcolor));        getSupportActionBar().setTitle("INICIO");        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        getSupportActionBar().setHomeButtonEnabled(true);        btningreso = findViewById(R.id.btnlog);        btnsalir = findViewById(R.id.btnsalir);        lvgranjas = findViewById(R.id.lvgranjas);        edttelefono = findViewById(R.id.etxnumero);        ingalways = findViewById(R.id.ingalways);        myRef = mDatabase.child("granjas").orderByChild("telefono").getRef();        //Query phoneQuery = myRef.orderByChild();        myRef.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                String granjas = "";                for(DataSnapshot singleSnapshot : dataSnapshot.getChildren()){                    granja = singleSnapshot.getValue(Granja.class);                    granjas = granjas + granja.getNombre() + ",";                    String[] granjasNom = granjas.split(",");                    for(int i=0; i<granjasNom.length; i++){                        values.add(granjasNom[i].toUpperCase());                    }                }            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {                Log.e("ERRORFIREBASE", "onCancelled", databaseError.toException());            }        });    }    private void setearpreferencias(){        preferences = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);        if(preferences.contains("pref_autogranja")){            isautogranja = preferences.getBoolean("pref_autogranja", false);            if(isautogranja) {                ingalways.setChecked(true);                IngresarDatos();            } else {                ingalways.setChecked(false);            }        }    }    /* -------------------- MENU OPCIONES --------------- */    @Override    public boolean onOptionsItemSelected(MenuItem item) {        switch (item.getItemId()) {            case android.R.id.home: //hago un case por si en un futuro agrego mas opciones                finish();                return true;            default:                return super.onOptionsItemSelected(item);        }    }    @Override    public void finish() {        super.finish();        overridePendingTransition(R.anim.slide_in_left, R.anim.slide_out_right);    }}